---
version: 0.2

phases:
  install:
    commands:
      - curl -sS -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/bin/linux/amd64/aws-iam-authenticator
      - curl -sS -o kubectl https://amazon-eks.s3-us-west-2.amazonaws.com/1.14.6/2019-08-22/bin/linux/amd64/kubectl
      - chmod +x ./kubectl ./aws-iam-authenticator
      - export PATH=$PWD/:$PATH
      - apt-get update && apt-get -y install jq python3-pip python3-dev && pip3 install --upgrade awscli

  pre_build:
    commands:
      - echo "Fetching latest image tags from ECR..."
      - TAGS=$(aws ecr list-images --repository-name "$REPOSITORY_NAME" --query 'imageIds[*].imageTag' --output text | tr '\t' '\n' | grep '^v[0-9]*$' | sed 's/v//' | sort -n)
      - echo "Existing tags:$TAGS"
      - LAST_TAG=$(echo "$TAGS" | tail -n 1); if [ -z "$LAST_TAG" ]; then LAST_TAG=0; fi; NEXT_TAG=$((LAST_TAG + 1)); TAG="v${NEXT_TAG}"
      - echo "Generated TAG:$TAG"
      - echo "$REPOSITORY_URI:$TAG"
      - echo "$TAG" > tag.txt
      - sed -i "s@CONTAINER_IMAGE@$REPOSITORY_URI:$TAG@" hello-k8s.yml
      - aws ecr get-login-password | docker login --username AWS --password-stdin "$REPOSITORY_URI"
      - export KUBECONFIG="$HOME/.kube/config"

  build:
    commands:
      - TAG=$(cat tag.txt)
      - docker build -t "$REPOSITORY_URI:$TAG" .

  post_build:
    commands:
      - TAG=$(cat tag.txt)
      - docker push "$REPOSITORY_URI:$TAG"
      - CREDENTIALS=$(aws sts assume-role --role-arn "$EKS_KUBECTL_ROLE_ARN" --role-session-name codebuild-kubectl --duration-seconds 900)
      - export AWS_ACCESS_KEY_ID="$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId')"
      - export AWS_SECRET_ACCESS_KEY="$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')"
      - export AWS_SESSION_TOKEN="$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')"
      - export AWS_EXPIRATION=$(echo ${CREDENTIALS} | jq -r '.Credentials.Expiration')
      - aws eks update-kubeconfig --name "$EKS_CLUSTER_NAME"
      - echo "===== Contents of hello-k8s.yml ====="
      - cat hello-k8s.yml
      - echo "====================================="
      - kubectl apply -f hello-k8s.yml
      - printf '[{"name":"hello-k8s","imageUri":"%s"}]' "$REPOSITORY_URI:$TAG" > build.json

artifacts:
  files:
    - build.json